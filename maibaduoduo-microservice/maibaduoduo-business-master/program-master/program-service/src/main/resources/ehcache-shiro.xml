<?xml version="1.0" encoding="UTF-8"?>
<ehcache updateCheck="false" name="defaultCache">

	<diskStore path="../temp/sansuolou/ehcache" />

	<!-- 默认缓存配置. 自动失效：最后一次访问时间间隔300秒失效，若没有访问过自创建时间600秒失效
    eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
    maxElementsInMemory：缓存中允许创建的最大对象数
    overflowToDisk：内存不足时，是否启用磁盘缓存。
    timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，  两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是 0 就意味着元素可以停顿无穷长的时间。
    timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
    memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
    diskPersistent:设定在虚拟机重启时是否进行磁盘存储，默认为false
    diskExpiryThreadIntervalSeconds: 属性可以设置该线程执行的间隔时间(默认是120秒，不能太小
    1 FIFO，先进先出
    2 LFU，最少被使用，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。
    3 LRU，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
    -->
	<defaultCache
			maxElementsInMemory="10000"
			eternal="false"
			timeToIdleSeconds="120"
			timeToLiveSeconds="120"
			overflowToDisk="false"
			diskPersistent="false"
			diskExpiryThreadIntervalSeconds="120"
	/>

	<cache name="activeSessionCache"
		   maxElementsInMemory="10000"
		   eternal="true"
		   overflowToDisk="false"
		   diskPersistent="true"
		   diskExpiryThreadIntervalSeconds="600"/>

	<cache name="shiro.authorizationCache"
		   maxElementsInMemory="100"
		   eternal="false"
		   timeToLiveSeconds="600"
		   overflowToDisk="false"/>

	<!--
		maxEntriesLocalHeap：内存中保存的对象的最大数据量
		maxEntriesLocalDisk：磁盘中保持的元素最大数量
		eternal：是否永久保存，如果是，那么下面过期时间将忽略
		diskSpoolBufferSizeMB：磁盘中缓存的字节尺寸
		timeToIdleSeconds：空闲时间,最后一次访问间隔多长时间失效。
		timeToLiveSeconds：最长存活时间
		memoryStoreEvictionPolicy：淘汰缓存的算法
		transactionalMode：是否集群
		overflowToDisk="true" 是否持久化到disk
		diskSpoolBufferSizeMB;这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。
		clearOnFlush：内存数量最大时是否清除。
　　    statistics：是否收集统计信息。如果需要监控缓存使用情况，应该打开这个选项。默认为关闭（统计会影响性能）。设置statistics="true"开启统计。
		diskPersistent： 是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false。
		diskExpiryThreadIntervalSeconds： 对象检测线程运行时间间隔。标识对象状态的线程多长时间运行一次。以秒为单位。
		缓存的3 种清空策略 ：
			FIFO ，first in first out (先进先出).
			LFU ， Less Frequently Used (最少使用).意思是一直以来最少被使用的。缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存。
			LRU ，Least Recently Used(最近最少使用). (ehcache 默认值).缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
	-->
</ehcache>