spring:
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.1.6:8848
        namespace: @profile.active@
      config:
        server-addr: 192.168.1.6:8848
        file-extension: yml
        shared-configs:
          - dataId: common.yml
            refresh: true
          - dataId: DY_ROUTE_DATA_ID.yml
            group: DY_ROUTE_GROUP_ID
            refresh: true
        namespace: @profile.active@
    gateway:
      routes: #配置路由路径
        - id: oauth2-api-route
          uri: lb://maibaduoduo-api-handle
          predicates:
            - Path=/api/**
          filters:
            - StripPrefix=1
        - id: oauth2-auth-route
          uri: lb://maibaduoduo-oauth-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@pathKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3
  #      discovery:
  #        locator:
  #          enabled: true #开启从注册中心动态创建路由的功能
  #          lower-case-service-id: true #使用小写服务名，默认是大写
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'http://localhost:9401/rsa/publicKey'

#配置白名单路径
secure:
  ignore:
    urls:
      - "/actuator/**"
      - "/auth/oauth/token"
      - "/dy/**"
      - "/favicon.ico"

#配置负载均衡和容错
maibaduoduo-api-service:
  ribbon:
    listOfServers: maibaduoduo-api-service:8091                                            #自定义服务器
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule                         #负载均衡策略
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.AvailabilityFilteringRule
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.weightedResponseTimeRule
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    NFLoadBalancerPingClassName: com.sansuolou.gateway.HealthExamination                     #判断服务是否可用
  hystrix:
    command:
      fallbackcmd:
        circuitBreakerEnabled: true
        execution:
          isolation:
            strategy: SEMAPHORE  #也可以设置线程池
            thread:
              timeoutInMilliseconds: 10000
    shareSecurityContext: true

#配置动态路由
maiba:
  gateway:
    dyroute:
      enable: true    #启动动态路由
      dyType: nacos   #启动nacos配置
test:
  route: testroute

j2cache:
  config-location: classpath:/cache/j2cache.properties
  open-spring-cache: true